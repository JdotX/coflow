plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "1.2.3"
}

apply plugin: 'scala'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

def javaSrcDir = new File("${projectDir}/src/main/java/netlink/swig")
def swigFile = new File("${projectDir}/src/main/jni/libnl-3/capi.i")

def cSrcFile = new File("${projectDir}/src/main/jni/libnl-3/capi_wrap.c")
def jniLib = new File("${projectDir}/build/libs/libnl4j.so")

task runSwig(type: Exec) {
    commandLine 'swig'
    javaSrcDir.mkdirs()
    args '-java', '-package', 'netlink.swig', '-outdir', javaSrcDir.absolutePath, swigFile.absolutePath
}

task compileJNI(type: Exec) {
    commandLine 'cc'
    args '-I', '/usr/lib/jvm/default-java/include', '-I', '/usr/lib/jvm/default-java/include/linux', '-I', '/usr/include/libnl3', '-lnl-route-3', '-lnl-3', '-shared', '-fPIC', '-o', jniLib.absolutePath, cSrcFile.absolutePath
}

sourceSets {
    main {
        scala.srcDirs = ["src/main/java", "src/main/scala"]
        java.srcDirs = []
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.10.4'
    compile 'com.typesafe.akka:akka-slf4j_2.10:2.3.14'
    compile 'com.typesafe.akka:akka-remote_2.10:2.3.14'
    compile 'com.github.romix.akka:akka-kryo-serialization_2.10:0.3.2'

    compile 'org.javassist:javassist:3.20.0-GA'
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'org.slf4j:slf4j-log4j12:1.7.13'

    testCompile 'junit:junit:4.12'
}

jar {
    baseName = 'coflow'
}

shadowJar {
    baseName = 'coflow'
    append('reference.conf')
    manifest {
        attributes(
                "Premain-Class": "coflow.agent.Agent",
                "Boot-Class-Path": archiveName
        )
    }
}

publishing {
    publications {
        shadow(MavenPublication) {
            from components.shadow
            artifactId = 'coflow'
        }
    }
}
